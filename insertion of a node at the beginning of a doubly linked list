#include <iostream>
using namespace std;

// Node structure for Doubly Linked List
struct Node {
    int data;
    Node* prev;
    Node* next;
};

// Function to insert a node at the beginning
void insertAtBeginning(Node** head, int value) {
    // Step 1: Create a new node
    Node* newNode = new Node();
    newNode->data = value;
    newNode->prev = nullptr;
    newNode->next = *head;

    // Step 2: If list is not empty, update previous headâ€™s prev
    if (*head != nullptr) {
        (*head)->prev = newNode;
    }

    // Step 3: Move head to point to the new node
    *head = newNode;
}

// Function to display the list
void display(Node* head) {
    Node* temp = head;
    cout << "Doubly Linked List: ";
    while (temp != nullptr) {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << endl;
}

int main() {
    Node* head = nullptr; // Empty list initially

    insertAtBeginning(&head, 10);
    insertAtBeginning(&head, 20);
    insertAtBeginning(&head, 30);

    display(head);

    return 0;
}
