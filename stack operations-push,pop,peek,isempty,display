#include <iostream>
#define MAX 5   // maximum size of stack
using namespace std;

class Stack {
    int arr[MAX];
    int top;

public:
    Stack() { top = -1; }

    // Push operation
    void push(int x) {
        if (top == MAX - 1) {
            cout << "Stack Overflow! Cannot push " << x << endl;
        } else {
            arr[++top] = x;
            cout << x << " pushed into stack\n";
        }
    }

    // Pop operation
    void pop() {
        if (top == -1) {
            cout << "Stack Underflow! No element to pop\n";
        } else {
            cout << arr[top--] << " popped from stack\n";
        }
    }

    // Peek operation
    void peek() {
        if (top == -1) {
            cout << "Stack is empty!\n";
        } else {
            cout << "Top element is: " << arr[top] << endl;
        }
    }

    // Check if stack is empty
    bool isEmpty() {
        return (top == -1);
    }

    // Display all elements
    void display() {
        if (top == -1) {
            cout << "Stack is empty!\n";
        } else {
            cout << "Stack elements: ";
            for (int i = top; i >= 0; i--)
                cout << arr[i] << " ";
            cout << endl;
        }
    }
};

int main() {
    Stack s;
    s.push(10);
    s.push(20);
    s.push(30);
    s.display();

    s.peek();
    s.pop();
    s.display();

    s.pop();
    s.pop();
    s.pop(); // extra pop to show underflow

    if (s.isEmpty())
        cout << "Stack is empty now!\n";

    return 0;
}
